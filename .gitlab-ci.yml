# .gitlab-ci.yml
#
# scontracts-waterfall
#
# pipelines can be triggered manually in the web
# setting DEPLOY_TAG will only deploy the tagged image


stages:
    - build

variables:
  GIT_STRATEGY:                    fetch
  GIT_SUBMODULE_STRATEGY:          recursive
  GIT_DEPTH:                       3
  CARGO_INCREMENTAL:               0
  CARGO_HOME:                      "/ci-cache/${CI_PROJECT_NAME}/cargo/${CI_JOB_NAME}"
  REGISTRY:                        registry.parity.io/parity/infrastructure/scripts


.docker-env:                       &docker-env
  image:                           ${REGISTRY}/contracts-ci-linux:latest
  before_script:
    - rustup show
    - cargo --version
    - sccache -s
  only:
    - master
    - /^v[0-9]+\.[0-9]+.*$/        # i.e. v1.0, v2.1rc1
    - schedules
    - web
    - /^[0-9]+$/                   # PRs
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  dependencies:                    []
  interruptible:                   true
  tags:
    - linux-docker

#### stage:                        build

build-and-test:
  stage:                           build
  <<:                              *docker-env
  before_script:
    # upstream CI can override global vars here
    - unset CARGO_TARGET_DIR
    # `cargo install` returns an error if there is nothing to update, so have to supress it here temporarily
    - cargo contract -V
    - cargo install --git https://github.com/paritytech/cargo-contract || echo $?
    - cargo contract -V
  needs:
    - project: parity/substrate
    job: build-linux-substrate
    ref: master
    artifacts: true
  script:
    - ls -la
    - unzip artifacts.zip || echo "no archive"
    - ls -la ./artifacts/substrate/substrate || echo "oops"
    - chmod +x ./artifacts/substrate/substrate || echo "nop not here"
    - export SUBSTRATE_PATH="./artifacts/substrate/substrate"
    - $SUBSTRATE_PATH --version || echo "in vain"
    - echo "_____Building contracts_____"
    # - ./build.sh
    - cd lib/ink/examples/lang2/flipper
    - cargo contract build
    - cargo contract generate-metadata
    - cd -
    - cd contracts/rust/raw-incrementer
    - ./build.sh
    - cd -
    - cd contracts/rust/restore-contract
    - ./build.sh
    - cd -
    - cd contracts/assemblyscript/flipper
    - yarn
    - yarn add assemblyscript
    - yarn build
    - ./build.sh
    - cd -
    - cd contracts/assemblyscript/incrementer
    - yarn
    - yarn add assemblyscript
    - yarn build
    - ./build.sh
    - cd -
    - cd contracts/assemblyscript/erc20
    - yarn
    - yarn add assemblyscript
    - yarn build
    - ./build.sh
    - cd -
    - $SUBSTRATE_PATH --version
    - echo "_____Running dev node and tests_____"
    # - ./test.sh
    - echo "_____Purging dev chain_____"
    - $SUBSTRATE_PATH purge-chain --dev -y
    - echo "_____Spinning up the substrate node in background_____"
    - $SUBSTRATE_PATH --dev &
    - SUBSTRATE_PID=$!
    - echo "_____Executing tests_____"
    - yarn && yarn test
    - echo "_____Kill the spawned substrate node_____"
    - kill -9 $SUBSTRATE_PID
