# .gitlab-ci.yml
#
# pallet-contracts-waterfall
#
# pipelines can be triggered manually in the web
# setting DEPLOY_TAG will only deploy the tagged image

stages:
  - build

variables:
  GIT_STRATEGY:                    fetch
  GIT_SUBMODULE_STRATEGY:          recursive
  GIT_DEPTH:                       100
  CARGO_INCREMENTAL:               0
  CARGO_HOME:                      "/ci-cache/${CI_PROJECT_NAME}/cargo/${CI_JOB_NAME}"
  REGISTRY:                        "registry.parity.io/parity/infrastructure/scripts"


.docker-env:                       &docker-env
  image:                           ${REGISTRY}/contracts-ci-linux:latest
  only:
    - master
    - /^v[0-9]+\.[0-9]+.*$/ # i.e. v1.0, v2.1rc1
    - schedules
    - web
    - branches
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  dependencies: []
  interruptible: true
  tags:
    - linux-docker

#### stage:                        build

build-and-test:
  stage: build
  <<: *docker-env
  variables:
    SUBSTRATE_PATH:                "./substrate"
  before_script:
    # upstream CI can override global vars here
    - unset CARGO_TARGET_DIR
    - rustup +nightly show
    - cargo --version
    - yarn --version
    - npm --version
    - wasm-prune -V
    - sccache -s
    # `cargo install` returns an error if there is nothing to update, so have to supress it here temporarily
    - cargo contract -V
    - cargo install --git https://github.com/paritytech/cargo-contract --branch master || echo $?
    - cargo contract -V
  script:
    - echo "_____Building contracts_____"
    - ./build.sh
    - echo "_____Downloading the latest nightly Substrate_____"
    # master from gitlab
    # - curl "https://gitlab.parity.io/parity/substrate/-/jobs/artifacts/master/download?job=build-linux-substrate" --output artifacts.zip --location
    # published master
    - curl "https://releases.parity.io/substrate/x86_64-debian:stretch/latest/substrate/substrate" --output substrate --location
    - chmod +x ./substrate
    - ./test.sh
